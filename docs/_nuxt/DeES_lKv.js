import{O as k,P as $,l as q,m as _,Q as N,R as A,S as U,a as W,n as L,k as y,d as O,T as D,r as x,o as B,x as E,U as R,V as C,K as S,W as G,y as T}from"#entry";async function H(e,t){return await F(t).catch(i=>(console.error("Failed to get image meta for "+t,i+""),{width:0,height:0,ratio:0}))}async function F(e){if(typeof Image>"u")throw new TypeError("Image not supported");return new Promise((t,r)=>{const i=new Image;i.onload=()=>{const n={width:i.width,height:i.height,ratio:i.width/i.height};t(n)},i.onerror=n=>r(n),i.src=e})}function I(e){return t=>t?e[t]||t:e.missingValue}function V({formatter:e,keyMap:t,joinWith:r="/",valueMap:i}={}){e||(e=(s,o)=>`${s}=${o}`),t&&typeof t!="function"&&(t=I(t));const n=i||{};return Object.keys(n).forEach(s=>{typeof n[s]!="function"&&(n[s]=I(n[s]))}),(s={})=>Object.entries(s).filter(([a,l])=>typeof l<"u").map(([a,l])=>{const c=n[a];return typeof c=="function"&&(l=c(s[a])),a=typeof t=="function"?t(a):a,e(a,l)}).join(r)}function m(e=""){if(typeof e=="number")return e;if(typeof e=="string"&&e.replace("px","").match(/^\d+$/g))return Number.parseInt(e,10)}function J(e=""){if(e===void 0||!e.length)return[];const t=new Set;for(const r of e.split(" ")){const i=Number.parseInt(r.replace("x",""));i&&t.add(i)}return Array.from(t)}function K(e){if(e.length===0)throw new Error("`densities` must not be empty, configure to `1` to render regular size only (DPR 1.0)")}function Q(e){const t={};if(typeof e=="string")for(const r of e.split(/[\s,]+/).filter(i=>i)){const i=r.split(":");i.length!==2?t["1px"]=i[0].trim():t[i[0].trim()]=i[1].trim()}else Object.assign(t,e);return t}function X(e){const t={options:e},r=(n,s={})=>M(t,n,s),i=(n,s={},o={})=>r(n,{...o,modifiers:k(s,o.modifiers||{})}).url;for(const n in e.presets)i[n]=(s,o,a)=>i(s,o,{...e.presets[n],...a});return i.options=e,i.getImage=r,i.getMeta=(n,s)=>Y(t,n,s),i.getSizes=(n,s)=>te(t,n,s),t.$img=i,i}async function Y(e,t,r){const i=M(e,t,{...r});return typeof i.getMeta=="function"?await i.getMeta():await H(e,i.url)}function M(e,t,r){if(t&&typeof t!="string")throw new TypeError(`input must be a string (received ${typeof t}: ${JSON.stringify(t)})`);if(!t||t.startsWith("data:"))return{url:t};const{provider:i,defaults:n}=Z(e,r.provider||e.options.provider),s=ee(e,r.preset);if(t=q(t)?t:$(t),!i.supportsAlias){for(const c in e.options.alias)if(t.startsWith(c)){const g=e.options.alias[c];g&&(t=_(g,t.slice(c.length)))}}if(i.validateDomains&&q(t)){const c=N(t).host;if(!e.options.domains.find(g=>g===c))return{url:t}}const o=k(r,s,n);o.modifiers={...o.modifiers};const a=o.modifiers.format;o.modifiers?.width&&(o.modifiers.width=m(o.modifiers.width)),o.modifiers?.height&&(o.modifiers.height=m(o.modifiers.height));const l=i.getImage(t,o,e);return l.format=l.format||a||"",l}function Z(e,t){const r=e.options.providers[t];if(!r)throw new Error("Unknown provider: "+t);return r}function ee(e,t){if(!t)return{};if(!e.options.presets[t])throw new Error("Unknown preset: "+t);return e.options.presets[t]}function te(e,t,r){const i=m(r.modifiers?.width),n=m(r.modifiers?.height),s=Q(r.sizes),o=r.densities?.trim()?J(r.densities.trim()):e.options.densities;K(o);const a=i&&n?n/i:0,l=[],c=[];if(Object.keys(s).length>=1){for(const u in s){const f=P(u,String(s[u]),n,a,e);if(f!==void 0){l.push({size:f.size,screenMaxWidth:f.screenMaxWidth,media:`(max-width: ${f.screenMaxWidth}px)`});for(const p of o)c.push({width:f._cWidth*p,src:z(e,t,r,f,p)})}}re(l)}else for(const u of o){const f=Object.keys(s)[0];let p=f?P(f,String(s[f]),n,a,e):void 0;p===void 0&&(p={size:"",screenMaxWidth:0,_cWidth:r.modifiers?.width,_cHeight:r.modifiers?.height}),c.push({width:u,src:z(e,t,r,p,u)})}ie(c);const g=c[c.length-1],w=l.length?l.map(u=>`${u.media?u.media+" ":""}${u.size}`).join(", "):void 0,v=w?"w":"x",b=c.map(u=>`${u.src} ${u.width}${v}`).join(", ");return{sizes:w,srcset:b,src:g?.src}}function P(e,t,r,i,n){const s=n.options.screens&&n.options.screens[e]||Number.parseInt(e),o=t.endsWith("vw");if(!o&&/^\d+$/.test(t)&&(t=t+"px"),!o&&!t.endsWith("px"))return;let a=Number.parseInt(t);if(!s||!a)return;o&&(a=Math.round(a/100*s));const l=i?Math.round(a*i):r;return{size:t,screenMaxWidth:s,_cWidth:a,_cHeight:l}}function z(e,t,r,i,n){return e.$img(t,{...r.modifiers,width:i._cWidth?i._cWidth*n:void 0,height:i._cHeight?i._cHeight*n:void 0},r)}function re(e){e.sort((r,i)=>r.screenMaxWidth-i.screenMaxWidth);let t=null;for(let r=e.length-1;r>=0;r--){const i=e[r];i.media===t&&e.splice(r,1),t=i.media}for(let r=0;r<e.length;r++)e[r].media=e[r+1]?.media||""}function ie(e){e.sort((r,i)=>r.width-i.width);let t=null;for(let r=e.length-1;r>=0;r--){const i=e[r];i.width===t&&e.splice(r,1),t=i.width}}const ne=V({keyMap:{format:"f",fit:"fit",width:"w",height:"h",resize:"s",quality:"q",background:"b"},joinWith:"&",formatter:(e,t)=>A(e)+"_"+A(t)}),se=!0,oe=!0,ae=(e,{modifiers:t={},baseURL:r}={},i)=>{t.width&&t.height&&(t.resize=`${t.width}x${t.height}`,delete t.width,delete t.height);const n=ne(t)||"_";return r||(r=_(i.options.nuxt.baseURL,"/_ipx")),{url:_(r,n,U(e).replace(/\/{2,}/g,"/"))}},de=Object.freeze(Object.defineProperty({__proto__:null,getImage:ae,supportsAlias:oe,validateDomains:se},Symbol.toStringTag,{value:"Module"})),ce={screens:{xs:320,sm:640,md:768,lg:1024,xl:1280,xxl:1536,"2xl":1536},presets:{},provider:"ipxStatic",domains:[],alias:{},densities:[1,2],format:["webp"],providers:{ipxStatic:{provider:de,defaults:{}}}},j=e=>{const t=L(),r=W();return r.$img||r._img||(r._img=X({...ce,event:r.ssrContext?.event,nuxt:{baseURL:t.app.baseURL},runtimeConfig:t}))};function le(e){performance?.mark?.("mark_feature_usage",{detail:{feature:e}})}const ue={src:{type:String,required:!1},format:{type:String,required:!1},quality:{type:[Number,String],required:!1},background:{type:String,required:!1},fit:{type:String,required:!1},modifiers:{type:Object,required:!1},preset:{type:String,required:!1},provider:{type:String,required:!1},sizes:{type:[Object,String],required:!1},densities:{type:String,required:!1},preload:{type:[Boolean,Object],required:!1},width:{type:[String,Number],required:!1},height:{type:[String,Number],required:!1},alt:{type:String,required:!1},referrerpolicy:{type:String,required:!1},usemap:{type:String,required:!1},longdesc:{type:String,required:!1},ismap:{type:Boolean,required:!1},loading:{type:String,required:!1,validator:e=>["lazy","eager"].includes(e)},crossorigin:{type:[Boolean,String],required:!1,validator:e=>["anonymous","use-credentials","",!0,!1].includes(e)},decoding:{type:String,required:!1,validator:e=>["async","auto","sync"].includes(e)},nonce:{type:[String],required:!1}},ge=e=>{const t=y(()=>({provider:e.provider,preset:e.preset})),r=y(()=>({width:m(e.width),height:m(e.height),alt:e.alt,referrerpolicy:e.referrerpolicy,usemap:e.usemap,longdesc:e.longdesc,ismap:e.ismap,crossorigin:e.crossorigin===!0?"anonymous":e.crossorigin||void 0,loading:e.loading,decoding:e.decoding,nonce:e.nonce})),i=j(),n=y(()=>({...e.modifiers,width:m(e.width),height:m(e.height),format:e.format,quality:e.quality||i.options.quality,background:e.background,fit:e.fit}));return{options:t,attrs:r,modifiers:n}},fe={...ue,placeholder:{type:[Boolean,String,Number,Array],required:!1},placeholderClass:{type:String,required:!1},custom:{type:Boolean,required:!1}},me=["src"],he=O({__name:"NuxtImg",props:fe,emits:["load","error"],setup(e,{emit:t}){const r=e,i=D(),n=t,s=!1,o=j(),a=ge(r),l=x(!1),c=x(),g=y(()=>o.getSizes(r.src,{...a.options.value,sizes:r.sizes,densities:r.densities,modifiers:{...a.modifiers.value,width:m(r.width),height:m(r.height)}})),w=y(()=>{const d={...a.attrs.value,"data-nuxt-img":""};return(!r.placeholder||l.value)&&(d.sizes=g.value.sizes,d.srcset=g.value.srcset),d}),v=y(()=>{let d=r.placeholder;if(d===""&&(d=!0),!d||l.value)return!1;if(typeof d=="string")return d;const h=Array.isArray(d)?d:typeof d=="number"?[d,d]:[10,10];return o(r.src,{...a.modifiers.value,width:h[0],height:h[1],quality:h[2]||50,blur:h[3]||3},a.options.value)}),b=y(()=>r.sizes?g.value.src:o(r.src,a.modifiers.value,a.options.value)),u=y(()=>v.value?v.value:b.value),p=W().isHydrating;return B(()=>{if(v.value||r.custom){const d=new Image;b.value&&(d.src=b.value),r.sizes&&(d.sizes=g.value.sizes||"",d.srcset=g.value.srcset),d.onload=h=>{l.value=!0,n("load",h)},d.onerror=h=>{n("error",h)},le("nuxt-image");return}c.value&&(c.value.complete&&p&&(c.value.getAttribute("data-error")?n("error",new Event("error")):n("load",new Event("load"))),c.value.onload=d=>{n("load",d)},c.value.onerror=d=>{n("error",d)})}),(d,h)=>d.custom?R(d.$slots,"default",G(C({key:1},{...S(s)?{onerror:"this.setAttribute('data-error', 1)"}:{},imgAttrs:{...w.value,...S(i)},isLoaded:l.value,src:u.value}))):(T(),E("img",C({key:0,ref_key:"imgEl",ref:c,class:v.value&&!l.value?d.placeholderClass:void 0},{...S(s)?{onerror:"this.setAttribute('data-error', 1)"}:{},...w.value,...S(i)},{src:u.value}),null,16,me))}}),we=Object.assign(he,{__name:"NuxtImg"}),pe=[{id:"mypiui",name:"MyPiUI",description:"A lightweight C# UI framework for Raspberry Pi devices that renders directly to the Linux framebuffer, allowing for graphical interfaces without a desktop environment.",summary:"C# UI framework for Raspberry Pi using the Linux framebuffer.",image:"/mypiui.png",tags:["C#","Linux","Graphics"],link:"https://github.com/lewpar/MyPiUI"},{id:"simupgrade",name:"Simulator Upgrade Project",description:"Developed a C# overlay and Arduino-based hardware system that enhanced in-game immersion through real-time telemetry integration. The system featured an in-game overlay displaying live vehicle data, an ABS sensor, a PWM-controlled fan that adjusted speed based on vehicle velocity, and a distance sensor used to dynamically calibrate the optimal field of view (FOV) based on the player's position.",summary:"Integrated C# overlay and Arduino hardware for immersive driving simulation.",image:"/default.png",tags:["C#","C++","Serial Communication","Micro-controllers","Rapid Prototyping","3D Printing"],link:"https://github.com/lewpar/AssettoNet"},{id:"gtnucl1633",name:"GTNUCL1633 Serial Driver",description:"A Python-based driver that communicates with the GTNUCL1633 Fingerprint Reader via serial connection, enabling biometric data capture and control.",summary:"Python serial driver for the GTNUCL1633 fingerprint sensor.",image:"/default.png",tags:["Python","Serial Communication"],link:"https://github.com/lewpar/gtnucl1633"},{id:"wireguardcommand",name:"WireGuard Command",description:"A C# utility that generates WireGuard configuration files for road-warrior setups. Supports macros for automating peer-specific command creation and configuration management.",summary:"C# tool for generating WireGuard configs and peer commands.",image:"/wgc.png",tags:["C#",".NET","SDLC"],link:"https://github.com/lewpar/WireGuardCommand"},{id:"cyberbilby",name:"Cyber Bilby",description:"An open-source technology blog built using AstroJS. It features articles covering programming, electronics, and open-source development projects.",summary:"Open-source tech blog built with AstroJS.",image:"/default.png",tags:["JavaScript","HTML","CSS","Markdown"],link:"https://cyberbilby.com"},{id:"assettonet",name:"AssettoNet",description:"A lightweight C# interface for receiving and handling real-time telemetry from Assetto Corsa's UDP broadcast for external display or analysis tools.",summary:"C# interface for Assetto Corsa real-time telemetry.",image:"/nuget.png",tags:["C#","UDP Networking","Graphics","Memory Marshalling"],link:"https://github.com/lewpar/AssettoNet"}],ye=[{name:"Digital Technology Award",description:"Recognized for outstanding initiative in IT studies through peer mentoring, independent projects, and active engagement in industry events.",grantor:"Kangan Institute",link:"https://www.linkedin.com/posts/lewpar_awards-season-came-to-life-at-the-kangan-activity-7301937657922695168-BbDC"}];function be(){return pe}function Se(){return ye}export{we as _,be as a,Se as g};
